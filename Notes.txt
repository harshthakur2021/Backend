// Node JS- Node js Javasript ka runtime environment hai .
 
  To Make NodeJS Project - NPM init
  Package.Json - It has all the information related about the project.
  
  Why we Need Node JS ?

  -> Phle Javascript sirf Browser pr chlta tha later on kuch developer ne Google k V8 Engine ko Chrome se bhr niklakar ek chiz
     Banna jo ki local System pr chlye Javascript ko usko Node js Bolte hai.

  Packages- Ek resuable code hota hai jo ki koi aur developer likhta hai aur hum uska use kr skte hai.
  Npm- Website se code pr lana ka kam Npm krta hai

  >> Express ke help se HTML kaise render karte hai uske liye phle setup karna prta hai view Engine.
     View Engine Bhut trh ke hote hai is me hm use krte hai -- Ejs
  >> Ejs- It keeps your HTML and JavaScript together, making it easier to handle dynamic content.
  
Express JS
 >> In Simple words, Express Js is like a helper that makes building a server with Node.js Fast and Easy.
 >> Node JS is the Main thing expres ke code se hum server ka code likh pate and server kaise react krega wo 
    bhi express ke help se likhte hai.
 >> Express-> Package, routing, Server side pr pura management, data handling request ko handle krna, response pr
              Bhejna
 Why Express?
 >>  Http is difficult to use, express Makes it easier.

 routing
 >> Routes bnna ke process ko hum kahte hai routing.
    / --> Home denotes
    /Profile--> Profile
    / Hoome---> Home                      

 Middlware
 >>  Middleware ek aisha function hota hai jo har route se phele chlta hai usse pahle middlware chlta hai and 
    usmein likha code pahle exceute hota hai.   

   1. req-> req me hota hai user ka data
   2. res-> res me hota hai jb server se response ayega
   3. next-> next is just a push so that our request moves to the next thing which should be executed.

  Types of Middleware

  1. Custom Middleware: User-defined middleware for specific application needs.
  2. Third-Party Middleware: Middleware provided by external libraries to add functionality.
  3. Built-in Middleware : app.use(express.json()) data ko parse krne me help krta hai ye Middleware
                           app.use(express.urlencoded({extended:true}))    


>> Form Controls- frontend se data server pr manga ke use kr skte hai...
>> Backend pr kuch bhi data mgwana hai ya send krna hai to route key use krna hota hai..     

   Method-
   1. Get- Server se data frontend tk mngne k liye 
   2. Post- frontend se data Backend tk mgwana me use hota

   >> Data Storage- Aisa kuch jaha hum sare users ki info store kar skte hai.
   Summary
Node.js allows JavaScript to run outside browsers.
NPM manages reusable code packages.
Express.js makes backend development easier.
Routing defines different pages (/, /profile, etc.).
Middleware processes requests before they reach the server logic.
View Engines (EJS) help render dynamic HTML.
Form Handling & HTTP Methods allow data exchange between frontend and backend.


   Types of DBS-
      1. SQL- Data Table ke form me store hota hai.
      2. NOSQL- Data Object ke form me store hota hai.

   >> Database-> Collections -> Document
   Code                         Database
   mongoose.connect ->          database create  --> Jb mongoose connect krte hai code tb databse me database create hota hai
   model create     ->         Collection       ---> Jb model create krta hai tb collection create hota hai.
   create code         ->         Document     --->  Jb create code likhte hai usse document create hota hai.
   >> Database- A Collection of organized information on a particular subject.
   >> MongoDB Compass- It is a GUI tool through which we can interact with your db.
   >> Collection - A Collection is a group of MongoDB Documents.
   
  >> Mongoose- Hamre ps do server hai ek node ka server hai ek mongodb k server hai
               Mongoose help krta hai node k server se mongodb k server se batchit krne k liye.

 >> Database usuallyy allow access to 4 Primitives
   1. Create Data
   2. Read Data
   3. Update Data
   4. Delete Data
   Popularly known as CRUD Operation.
